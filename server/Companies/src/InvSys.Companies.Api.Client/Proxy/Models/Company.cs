// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace InvSys.Companies.Api.Client.Proxy.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Company
    {
        /// <summary>
        /// Initializes a new instance of the Company class.
        /// </summary>
        public Company() { }

        /// <summary>
        /// Initializes a new instance of the Company class.
        /// </summary>
        public Company(string symbol, string name, Guid? id = default(Guid?), string culture = default(string), string exchange = default(string), string logo = default(string), string phone = default(string), string fax = default(string), string email = default(string), string description = default(string), string address = default(string), string website = default(string), string sector = default(string), string subsector = default(string), string industry = default(string), DateTime? ipoDate = default(DateTime?), string marketValue = default(string), string country = default(string), IList<Website> websites = default(IList<Website>), IList<Officer> officers = default(IList<Officer>))
        {
            Id = id;
            Culture = culture;
            Exchange = exchange;
            Symbol = symbol;
            Name = name;
            Logo = logo;
            Phone = phone;
            Fax = fax;
            Email = email;
            Description = description;
            Address = address;
            Website = website;
            Sector = sector;
            Subsector = subsector;
            Industry = industry;
            IpoDate = ipoDate;
            MarketValue = marketValue;
            Country = country;
            Websites = websites;
            Officers = officers;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "culture")]
        public string Culture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchange")]
        public string Exchange { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logo")]
        public string Logo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "phone")]
        public string Phone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fax")]
        public string Fax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "website")]
        public string Website { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sector")]
        public string Sector { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subsector")]
        public string Subsector { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "industry")]
        public string Industry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ipoDate")]
        public DateTime? IpoDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "marketValue")]
        public string MarketValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "websites")]
        public IList<Website> Websites { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "officers")]
        public IList<Officer> Officers { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Symbol == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Symbol");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
