// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace InvSys.Email.Api.Client.Proxy.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Template
    {
        /// <summary>
        /// Initializes a new instance of the Template class.
        /// </summary>
        public Template() { }

        /// <summary>
        /// Initializes a new instance of the Template class.
        /// </summary>
        public Template(string name, string title, string description, string body, Guid? id = default(Guid?), string culture = default(string))
        {
            Id = id;
            Culture = culture;
            Name = name;
            Title = title;
            Description = description;
            Body = body;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "culture")]
        public string Culture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "body")]
        public string Body { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
            if (Description == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Description");
            }
            if (Body == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Body");
            }
            if (this.Name != null)
            {
                if (this.Name.Length > 200)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Name", 200);
                }
                if (this.Name.Length < 2)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Name", 2);
                }
            }
            if (this.Title != null)
            {
                if (this.Title.Length > 200)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Title", 200);
                }
                if (this.Title.Length < 2)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Title", 2);
                }
            }
            if (this.Description != null)
            {
                if (this.Description.Length > 3000)
                {
                    throw new ValidationException(ValidationRules.MaxLength, "Description", 3000);
                }
                if (this.Description.Length < 20)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Description", 20);
                }
            }
        }
    }
}
