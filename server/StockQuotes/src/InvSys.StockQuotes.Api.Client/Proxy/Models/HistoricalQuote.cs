// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace InvSys.StockQuotes.Api.Client.Proxy.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class HistoricalQuote
    {
        /// <summary>
        /// Initializes a new instance of the HistoricalQuote class.
        /// </summary>
        public HistoricalQuote() { }

        /// <summary>
        /// Initializes a new instance of the HistoricalQuote class.
        /// </summary>
        public HistoricalQuote(int? id = default(int?), string symbol = default(string), DateTime? date = default(DateTime?), double? open = default(double?), double? high = default(double?), double? low = default(double?), double? close = default(double?), long? volume = default(long?), double? adjClose = default(double?))
        {
            Id = id;
            Symbol = symbol;
            Date = date;
            Open = open;
            High = high;
            Low = low;
            Close = close;
            Volume = volume;
            AdjClose = adjClose;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "symbol")]
        public string Symbol { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "date")]
        public DateTime? Date { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "open")]
        public double? Open { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "high")]
        public double? High { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "low")]
        public double? Low { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "close")]
        public double? Close { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "volume")]
        public long? Volume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "adjClose")]
        public double? AdjClose { get; set; }

    }
}
